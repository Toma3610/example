#java -jar spring-cloud-eureka-0.0.1-SNAPSHOT.jar --spring.profiles.active=peer1
---
server:
  port: 8000
spring:
  application:
    name: spring-cloud-eureka
  profiles: peer1
eureka:
  instance:
    hostname: peer1
  client:
    register-with-eureka: true # 表示是否将自己注册到Eureka Server，默认为true。
    fetch-registry: true # 表示是否从Eureka Server获取注册信息，默认为true
    service-url: #设置与Eureka Server交互的地址，查询服务和注册服务都需要依赖这个地址。默认是http://localhost:8761/eureka ；多个地址可使用 , 分隔。
#      defaultZone: http://peer1:8000/eureka/
      defaultZone: http://peer2:8001/eureka/,http://peer3:8002/eureka/

---
server:
  port: 8001
spring:
  profiles: peer2
  application:
    name: spring-cloud-eureka
eureka:
  instance:
    hostname: peer2
  client:
    register-with-eureka: true # 表示是否将自己注册到Eureka Server，默认为true。
    fetch-registry: true # 表示是否从Eureka Server获取注册信息，默认为true
    service-url: #设置与Eureka Server交互的地址，查询服务和注册服务都需要依赖这个地址。默认是http://localhost:8761/eureka ；多个地址可使用 , 分隔。
      defaultZone: http://peer1:8000/eureka/,http://peer3:8002/eureka/

---
server:
  port: 8002
spring:
  profiles: peer3
  application:
    name: spring-cloud-eureka
eureka:
  instance:
    hostname: peer3
  client:
    register-with-eureka: true # 表示是否将自己注册到Eureka Server，默认为true。
    fetch-registry: true # 表示是否从Eureka Server获取注册信息，默认为true
    service-url: #设置与Eureka Server交互的地址，查询服务和注册服务都需要依赖这个地址。默认是http://localhost:8761/eureka ；多个地址可使用 , 分隔。
      defaultZone: http://peer1:8000/eureka/,http://peer2:8001/eureka/

